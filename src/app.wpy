<style lang="less">
/*商品清单信息*/
  page {
    background: #f5f5f5;
  }

  .info {
    background: white;
    margin-top: 10px;
  }

  /*商品信息*/
  .info .header {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: center;
    font-size: 14px;
    color: #3d3d3d;
    border-bottom: 1px solid #eee;
  }

  /*logo图标*/
  .logo {
    width: 30px;
    height: 30px;
    margin: 5px;
  }

  /*每行*/
  .item {
    display: flex;
    flex-direction: row;
    line-height: 40px;
    color: #666;
    border-bottom: 1px solid #eee;
    margin-left: 10px;
    font-size: 14px;
    /*relative供arrow参照用*/
    position: relative;
    /*justify-content: space-between;*/
  }

  .item:last-child {
    border-bottom: 0;
  }

  .arrow {
    content: " ";
    height: 6px;
    width: 6px;
    border-width: 2px 2px 0 0;
    border-color: #ccc;
    border-style: solid;
    transform:rotate(45deg);
    position: absolute;
    margin-top: -4px;
    top: 50%;
    right: 15px;
  }

  /*清单*/
  .list {
    display: flex;
    flex-direction: column;
  }

  /*商品名称*/
  .title {
    margin-left: 10px;
    flex: 8;
  }

  /*数量*/
  .quantity {
    color: #ccc;
    flex: 1;
    margin-right: 5px;
  }

  .quantity:before {
    content: "× "
  }

  /*价格*/
  .price {
    margin-right: 5px;
  }

  .price:before {
    content: "￥"
  }

  /*配送费*/
  .express-label {
    /*width: 90%;*/
    margin-left: 10px;
    flex: 9;
  }

  .express-fee {
    /*width: 10%;*/
    margin-right: 5px;
  }

  .express-fee:before {
    content: "￥"
  }

  .item .amount {
    width: 100%;
    text-align: right;
    padding-right: 10px;
  }

  /*待支付*/
  .item .amount:before {
    content: "待支付 ￥";
  }

  /*初始隐藏*/
  .hidden {
    display: none;
  }

  /*运行时显示*/
  .show {
    display: block;
  }

  /*空白占位*/
  .holder {
    margin-top: 40%;
  }

  .holder image {
    margin: 20px auto;
    width: 50px;
    height: 50px;
    display: block;
  }

  .holder view {
    margin: 10px auto;
    font-size: 16px;
    color: #ccc;
    text-align: center;
  }
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { setStore } from 'wepy-redux'
import configStore from './store'

const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    pages: [
      'pages/food',
      'pages/order',
      'pages/checkout',
      'pages/remark'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#0099ff',
      navigationBarTitleText: '外卖Demo',
      navigationBarTextStyle: 'white'
    },
    tabBar: {
      selectedColor: '#3cc51f',
      list: [
        {
          pagePath: 'pages/food',
          text: '菜品',
          iconPath: 'images/icon_home.png',
          selectedIconPath: 'images/icon_home_selected.png'
        },
        {
          pagePath: 'pages/order',
          iconPath: 'images/icon_cate.png',
          selectedIconPath: 'images/icon_cate_selected.png',
          text: '订单'
        }
        // {
        //   pagePath: 'member/index/index',
        //   iconPath: 'images/icon_member.png',
        //   selectedIconPath: 'images/icon_member_selected.png',
        //   text: '我的'
        // }
      ]
    }
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
  }

  onLaunch() {
    this.testAsync()
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
